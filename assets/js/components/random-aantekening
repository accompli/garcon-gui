                        <Link to="/newuser">
                        <button className = "mdl-button mdl-js-button add_user"
                                type=""
                                name="submit">
                                    <svg className="add_icon" fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
                                    </svg>
                                    New User
                        </button>
                        </Link>


$.ajax({
            url: "http://garcon-server.jinhua.choffice.nl/users",
            type: 'POST',
            data: newusername,
            success:
                    function(data){ 
                        if (data.status === "success"){
                            console.log(data.status);
                        }
                        else if (data.status === "fail"){
                            console.log(data);
                        }
                    }.bind(this),
                    
            error:
                    function(xhr, status, err){
                        console.error(this.props.url, status, err.toString());
                    }.bind(this)
        });






        return (
                 <table className="mdl-data-table mdl-js-data-table mdl-shadow--2dp">
                        <thead>               
                            <tr>
                                <th className="mdl-data-table__cell--non-numeric">Photo</th>
                                <th>Username</th>
                                <th>E-mail</th>
                                <th>Projects</th>
                                <th>Edit</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td className="mdl-data-table__cell--non-numeric">foto1</td>
                                <td>Rik Speel</td>
                                <td>rikspeel@connectholland.nl</td>
                                <td>4</td>
                                <td>edit
                                </td>
                            </tr>
                    
                            <tr>
                                <td className="mdl-data-table__cell--non-numeric">foto2</td>
                                <td>Giso Stallenberg</td>
                                <td>giso@connectholland.nl</td>
                                <td>4</td>
                                <td>edit</td>
                            </tr>
                    
                            <tr>
                                <td className="mdl-data-table__cell--non-numeric">foto3</td>
                                <td>Paul Niehuis</td>
                                <td>paulniehuis@connectholland.nl</td>
                                <td>4</td>
                                <td>edit</td>
                            </tr>
   
                    
                        </tbody>
                    </table>
                );





                        for (var i=0; i < this.props.length; i++){
                            var propsObject = this.props[i];
                            console.log("username:" + propsObject.username)
                        }


<span dangerouslySetInnerHTML={this.rawMarkup()} />





 var usersNodes = this.props.data.map(function(user, index) {
                                            
            return (
                    <Users name={user.username} key={index}
                        email = {user.email}
                        project = {user.projects} 
                        photo = {user.photo} >
                    </Users>
                    );
        });
        
        
        
        
                var propsData = this.props.data;
        
        console.log(propsData);
        
        for(var i=0; i<propsData.length; i++){
            var userObject = propsData[i];
            console.log(userObject)
                                  
            return (
                    <Users name={userObject.username}
                        email = {userObject.email}
                        project = {userObject.projects} 
                        photo = {userObject.photo} >
                    </Users>
                    );
        }
        
        
        
 var userData = this.props.data.map(function(user, index) {
                                            
            return (
                    <Users name={user.username} key={index}
                        email = {user.email}
                        project = {user.projects} 
                        photo = {user.photo} >
                    </Users>
                    );
        });
        
        return (
                <div className="usersList">
                    {usersNodes}
                </div>
                );

                                <{userObject.username}
                                {userObject.email}
                                {userObject.projects}



  <button id="edit-options">
                            <i className="material-icons">

                               <svg className="edit_icon" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                               <path d="M0 0h24v24H0z" fill="none"/>
                               <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                               </svg>

                           </i>
                   
                        </button>

                        <ul className="mdl-menu mdl-menu--top-left mdl-js-menu mdl-js-ripple-effect"
                            htmlFor="edit-options">
                          <li className="mdl-menu__item">Some Action</li>
                          <li className="mdl-menu__item">Another Action</li>
                          <li disabled className="mdl-menu__item">Disabled Action</li>
                          <li className="mdl-menu__item">Yet Another Action</li>
                        </ul>



import React from 'react'
import ReactDOM from 'react-dom'
import { render } from 'react-dom'
import { Router, Route, Link, IndexRoute, IndexRedirect, History } from 'react-router'
import $ from 'jquery'
import { createHistory, useBasename } from 'history'


const history = useBasename(createHistory)({
  basename: '/breadcrumbs'
})


render : function() {
            const depth = this.props.routes.length;
            
    return (
            <div className="app">
            <div className="mdl-layout mdl-js-layout mdl-layout--fixed-header">
                <div className="no_login_header">
                    <Header status={this.state.status}
                            photo={this.state.photo}/>
                </div>

            <ul className="breadcrumbs-list">
                {this.props.routes.map((item, index) =>
                  <li key={index}>
                    <Link
                      onlyActiveOnIndex={true}
                      activeClassName="breadcrumb-active"
                      to={item.path || ''} > 
                      {item.component.title}
                    </Link>
                    {(index + 1) < depth && '\u2192'}
                  </li>
                )}
              </ul>
                      

                <main className="mdl-layout__content">

                        {React.cloneElement(this.props.children, {onUpdate: this.onUpdate})}





    render: function(){
        var userData = this.props.data.map(function(user, index) {
//                                   console.log(user)                 
            return (
                    <Users user={user} key={index}>
                    </Users>
                    );
        });
        
        return (
                <div className="usersList">
                    {userData}
                </div>
                );
    }









var UsersList = React.createClass({
    propTypes: {
        data: React.PropTypes.array.isRequired
    },
        
    render: function(){
        
        var dataLength = this.props.data.length;
        
        function getFields(input, field){
            var output = [];
            for (var i=0; i <input.length; i++)
                output.push(input[i][field]);
                return output;
        }
        
        var data=this.props.data;
        
        var usernameArray = getFields(data, "username");
        var emailArray = getFields(data, "email");
        
        
        var userData = this.props.data.map(function(user, index) {
            
            return (
                    <Users user={user} key={index} length={dataLength}>
                        
                    </Users>
                    );
        });

        return (
                <div className="usersList">
                    <Users  usernamedata={usernameArray}
                            emaildata={emailArray} />
                </div>
                );
    }
});






  <tr>
                                <td className="mdl-data-table__cell--non-numeric"><img src="" id="usericons"/></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td> 
                                
                                 <button id="edit-options">
                            <i className="material-icons">

                               <svg className="edit_icon" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                               <path d="M0 0h24v24H0z" fill="none"/>
                               <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                               </svg>

                           </i>
                   
                        </button>

                        <ul className="mdl-menu mdl-menu--top-left mdl-js-menu mdl-js-ripple-effect"
                            htmlFor="edit-options">
                          <li className="mdl-menu__item">Some Action</li>
                          <li className="mdl-menu__item">Another Action</li>
                          <li disabled className="mdl-menu__item">Disabled Action</li>
                          <li className="mdl-menu__item">Yet Another Action</li>
                        </ul>
                                
                                
                                
                                </td>
                        
                            </tr>






  <svg className="search_icon filtericons" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                                <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
                                <path d="M0 0h24v24H0z" fill="none"/>
                                </svg>
                        <input className="searchform" type="search"  id="search" placeholder="Filter by name"/>

          <button id="demo-menu-top-left"
        className="mdl-button mdl-js-button mdl-button--icon">
  PRESS
</button>

<ul className="mdl-menu mdl-menu--top-left mdl-js-menu mdl-js-ripple-effect"
    htmlFor="demo-menu-top-left">
  <li className="mdl-menu__item">Some Action</li>
  <li className="mdl-menu__item">Another Action</li>
  <li disabled className="mdl-menu__item">Disabled Action</li>
  <li className="mdl-menu__item">Yet Another Action</li>
</ul>    

if (this.state.data.length === 0){
            return (
                    <div>
                        Loading...
                    </div>
                )
        }
        
        else {
            return (
                        <div className="edituser">
                            <GreenBox title={EditUser.title} />
                            <BreadcrumbsBox />
                            <EditUserBox dataId={this.props.params.user} data={this.state.data}/>

                    </div>
                );
        }














[
    {
        "username": "Arjen",
        "email": "arjen@connectholland.nl",
        "projects": null,
        "photo": "http:\/\/www.gravatar.com\/avatar\/7886f27eb2726219612abbd19cc6166c?d=mm"
    },
    {
        "username": "Jinhua",
        "email": "jinhua@connectholland.nl",
        "projects": null,
        "photo": "http:\/\/www.gravatar.com\/avatar\/b7d8e597d868d77d3f8cf3fe1b79db5c?d=mm"
    },
    {
        "username": "Giso",
        "email": "giso@connectholland.nl",
        "projects": null,
        "photo": "http:\/\/www.gravatar.com\/avatar\/455992e0ec713c530ae11678bb96332e?d=mm"
    },
    {
        "username": "Gisoooooooo",
        "email": "ghgfg",
        "projects": null,
        "photo": "http:\/\/www.gravatar.com\/avatar\/89bbb3e2202a809c482e0589ba7bb7fb?d=mm"
    },
    {
        "username": "Gisoooooooo",
        "email": "ghgfg",
        "projects": null,
        "photo": "http:\/\/www.gravatar.com\/avatar\/89bbb3e2202a809c482e0589ba7bb7fb?d=mm"
    }
]




   $jsonfile = 'users.json';
    
    $userid = $request->get('userid');
    
    $file = json_decode(file_get_contents('users.json'), true);

    foreach ($file as $key => $value)
    {
        if (array_key_exists("userid", $value) && $value['userid'] == $userid) {
            unset($file[$key]);
        }
    }
    
    $file = array_values($file);
    
    $jsondata = json_encode($file, JSON_PRETTY_PRINT);
    
    if ($result = file_put_contents($jsonfile, $jsondata)){
    return new JsonResponse(
                array(
                "status" => "success"
                    )
                );
    }
    else {
        return new JsonResponse(
            array(
                "status" => "fail"
                )
        );
    }



import React from 'react'
import ReactDOM from 'react-dom'
import { render } from 'react-dom'
import { Router, Route, Link, IndexRoute, IndexRedirect, History, Navigation } from 'react-router'
import { createHistory, useBasename } from 'history'

import Forgetpass from './components/Forgetpassword/forgetpass.js'
import Login from './components/Login/login.js'
import Dashboard from './components/Dashboard/dashboard.js'
import Usersettings from './components/Usersetting/usersettings.js'
import Newuser from './components/newuser.js'
import Organisation from './components/Organisation/organisation.js'
import Header from './components/Layout/header.js'
import AccountSetting from './components/Accountsetting/accountsetting.js'
import SystemSetting from './components/Systemsetting/systemsetting.js'
import RecentActivity from './components/Recentactivity/recentactivity.js'
import EditUser from './components/Edituser/edituser.js'
import Project from './components/Project/project.js'



           
                        <tbody className="applicationdata">            
                            <tr>
                                <th className="mdl-data-table__cell--non-numeric">Application</th>
                                <th>Edited</th>
                                <th><div className="status">Version</div></th>
                                <th><div className="status">Status</div></th>
                                <th><div className="edit">Edit</div></th>
                        
                            </tr>
                        </tbody>




    <div className="projecttable">
                    <table className="mdl-data-table mdl-js-data-table">
                        <thead>               
                            <tr>
                               <th className="mdl-data-table__cell--non-numeric">Application</th>
                                <th>Edited</th>
                                <th><div className="status">Version</div></th>
                                <th><div className="status">Status</div></th>
                                <th><div className="edit">Edit</div></th>
                            </tr>
                            
                        </thead>
                
                        <tbody >            
                            {applicationData}
                        <tr>button</tr>
                        </tbody>
                
                    </table>
                </div>
                );



        <tr id={this.props.application.applicationid}>
                    <td>{this.props.application.applicationname}</td>
                    <td>{this.props.project.editdate}</td>
                    <td><div className="status">{this.props.application.version}</div></td>
                    <td><div className="status">{this.props.application.status}</div></td>
                    <td >
                        <div className="status">
                            <button className="edit-options"
                                    id={this.props.project.projectid}>
                                            
                                    <i className="material-icons">

                                    <svg className="edit_icon" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M0 0h24v24H0z" fill="none"/>
                                        <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                                    </svg>

                                    </i>

                            </button>

                            <ul className="mdl-menu mdl-menu--top-right mdl-js-menu mdl-js-ripple-effect "
                                htmlFor={this.props.project.projectid}>
                                    <Link to="/RecentActivity"><li className="mdl-menu__item">Recent activity</li></Link>
                                        <li className="mdl-menu__item">
                                            <Link to={`/editproject/${this.props.project.projectid}`}>Edit</Link>
                                        </li>
                                <li className="mdl-menu__item">Delete</li>
                            </ul>
                        </div>
                    </td>
                </tr>




    var applicationData = this.state.application.map(function(application, index) {
            return (
                    <ApplicationItem app={application} key={index} countdata={index}serverUrl={this.props.serverUrl}>
                    </ApplicationItem>
                    );
        }.bind(this));


<div className={`mdl-textfield mdl-js-textfield mdl-textfield--floating-label ${this.state.newAppForm}`}>
                                 <input  className="mdl-textfield__input"
                                    type="text"
                                    ref="version"
                                    id="version" />
                            <label  className ="mdl-textfield__label" htmlFor="version" >
                                Version
                            </label>    
                            </div>







[
    {
        "applicationid": "56a246b848a38",
        "projectid": "6120376"
    },
    {
        "applicationid": "222",
        "projectid": "444"
    },
    ,
    {
        "applicationid": "222",
        "projectid": "41624285"
    },
    ,
    {
        "applicationid": "333",
        "projectid": "333"
    },
    ,
    {
        "applicationid": "222",
        "projectid": "6120376"
    },
    ,
    {
        "applicationid": "444",
        "projectid": "56a0987c03c0b"
    },
    ,
    {
        "applicationid": "333",
        "projectid": "56a0987c03c0b"
    }
    
]